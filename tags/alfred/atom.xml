<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh">
    <title> - Alfred</title>
    <link href="https://linq.github.io/tags/alfred/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://linq.github.io"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-04-28T00:00:00+00:00</updated>
    <id>https://linq.github.io/tags/alfred/atom.xml</id>
    <entry xml:lang="zh">
        <title>我的Alfred Workflow</title>
        <published>2024-04-28T00:00:00+00:00</published>
        <updated>2024-04-28T00:00:00+00:00</updated>
        <author>
          <name>Unknown</name>
        </author>
        <link rel="alternate" href="https://linq.github.io/posts/my-alfred-workflow/" type="text/html"/>
        <id>https://linq.github.io/posts/my-alfred-workflow/</id>
        
        <content type="html">&lt;p&gt;总结下我自己开发的几个&lt;a rel=&quot;noopener&quot; target=&quot;_blank&quot; href=&quot;https:&#x2F;&#x2F;github.com&#x2F;linq&#x2F;my-workflows&quot;&gt;Alfred Workflow&lt;&#x2F;a&gt;，主要都是效能提升相关。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;anki-qia-pian-zhi-zuo&quot;&gt;Anki 卡片制作&lt;&#x2F;h2&gt;
&lt;p&gt;这个 Workflow 主要是对我之前写的 &lt;a href=&quot;&#x2F;posts&#x2F;markdown-to-anki&quot;&gt;Obsidian制作Anki卡片&lt;&#x2F;a&gt; 的封装，之前开发的是一个Python 脚本，每次执行都需要到命令行不太方便，而且还需要指定具体的Obsidian 路径。&lt;&#x2F;p&gt;
&lt;p&gt;该 Workflow 简化了对应的路径输入，通过 sa 关键词触发后，会列出具体的 Obsidian 中需要同步的笔记，选择好对应的笔记就会自动触发同步。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;linq.github.io&#x2F;posts&#x2F;my-alfred-workflow&#x2F;anki-workflow-wd.webp&quot; alt=&quot;anki worflow window&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;在 Workflow 中需要配置 Anki 笔记的目录，默认使用系统自带的 Python3，如要要自定义也可以通过 Python Interpreter 指定。&lt;&#x2F;p&gt;
&lt;p&gt;同时由于markdown 制作基于 &lt;code&gt;markdown2&lt;&#x2F;code&gt; 和 &lt;code&gt;requests&lt;&#x2F;code&gt; 两个库，可以通过 &lt;code&gt;pip install markdown2 requests&lt;&#x2F;code&gt; 来安装。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;flomo-tong-bu&quot;&gt;Flomo 同步&lt;&#x2F;h2&gt;
&lt;p&gt;这个也是基于之前的 &lt;a href=&quot;&#x2F;posts&#x2F;flomo-sync&quot;&gt;同步Flomo卡片到markdown&lt;&#x2F;a&gt; 开发的 Workflow，主要也是为了便于触发 Flomo 同步，避免每次都需要到命令行执行。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;linq.github.io&#x2F;posts&#x2F;my-alfred-workflow&#x2F;flomo-workflow-conf.webp&quot; alt=&quot;flomo worflow config&quot; &#x2F;&gt;
主要就 3 个配置，Token 是指定 flomo 的 api token，这个的获取也简单，登录 Flomo 后，在 Cookie 里面即可获取。Folder 指定要同步的目标目录，Python Interpreter 指定要使用的Python 解释器，默认是系统自带的 Python3，同样需要安装依赖：&lt;code&gt;pip install html2text markdown2&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pdf-ya-suo&quot;&gt;PDF 压缩&lt;&#x2F;h2&gt;
&lt;p&gt;这个是因为我会把一些PDF 放到知识库中，但是很多PDF 动辄几十兆，主要是PDF 中的图片比较大，但是一般的图片稍微压缩也不影响阅读，所以我一般都会使用 &lt;code&gt;PDF Expert&lt;&#x2F;code&gt; 自带的压缩功能，一般保持 &lt;code&gt;Medium&lt;&#x2F;code&gt; 质量即可，像一份 10 多MB 的PDF，经过压缩可以控制在 500KB 左右。&lt;&#x2F;p&gt;
&lt;p&gt;这个 Workflow 的使用方式推荐结合 Alfred 的 &lt;code&gt;Universial Actions&lt;&#x2F;code&gt;，比如我会把快捷键设置成 &lt;code&gt;CMD + \&lt;&#x2F;code&gt;。这样在Finder 中，选中一个PDF 文件后，输入快捷键，出现的Action 列表就会有 &lt;code&gt;PDF Compress&lt;&#x2F;code&gt;，选中之后就会自动触发PDF 压缩。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;linq.github.io&#x2F;posts&#x2F;my-alfred-workflow&#x2F;pdf-compress-workflow.webp&quot; alt=&quot;pdf compress worflow&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;该 Workflow 是基于 &lt;code&gt;AppleScript&lt;&#x2F;code&gt; 开发的自动化脚本，也就是你的电脑需要有 &lt;code&gt;PDF Expert&lt;&#x2F;code&gt;，然后在触发后会自动点击对应的菜单执行操作。所以需要你的电脑需要安装 &lt;code&gt;PDF Expert&lt;&#x2F;code&gt;。&lt;&#x2F;p&gt;
&lt;h2 id=&quot;bob-cha-ci&quot;&gt;Bob 查词&lt;&#x2F;h2&gt;
&lt;p&gt;该 Workflow 基于Bob 官方的 &lt;code&gt;AppleScript&lt;&#x2F;code&gt; API 制作，支持通过Alfred 触发单词查词、图片OCR 和接入OCR翻译。查词可以结合 Alfred 的 &lt;code&gt;Universial Actions&lt;&#x2F;code&gt;，在任意位置选中一个单词后，输入 &lt;code&gt;CMD + \&lt;&#x2F;code&gt; 即可查询。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;linq.github.io&#x2F;posts&#x2F;my-alfred-workflow&#x2F;slt-flow.webp&quot; alt=&quot;bob worflow translate text&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;图片 OCR 和接入 OCR 翻译可以在Alfred 中输入 &lt;code&gt;slt&lt;&#x2F;code&gt; 关键词触发。&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;https:&#x2F;&#x2F;linq.github.io&#x2F;posts&#x2F;my-alfred-workflow&#x2F;lt-flow-word.webp&quot; alt=&quot;bob workfow with ocr&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
</feed>
